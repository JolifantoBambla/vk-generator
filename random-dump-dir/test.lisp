(ql:quickload :vk)
(in-package :%vk)

(defun get-instance-layer-props ()
  (with-foreign-object (p-property-count :int)
    (enumerate-instance-layer-properties p-property-count (null-pointer))
    (let ((property-count (mem-aref p-property-count :int)))
      (with-foreign-object (p-properties '(:struct layer-properties) property-count)
        (enumerate-instance-layer-properties p-property-count p-properties)
        (remove-duplicates
         (loop for i from 0 below (mem-aref p-property-count :int)
               collect (let ((p-property (mem-aptr p-properties '(:struct layer-properties) i)))
                         (list (foreign-string-to-lisp (foreign-slot-pointer p-property '(:struct layer-properties) 'layer-name))
                               (foreign-slot-value p-property '(:struct layer-properties) 'spec-version)
                               (foreign-slot-value p-property '(:struct layer-properties) 'implementation-version)
                               (foreign-string-to-lisp (foreign-slot-pointer p-property '(:struct layer-properties) 'description)))))
               :test #'equalp)))))

(defun get-instance-ext-props (layer-name)
  (with-foreign-string (p-layer-name layer-name)
    (with-foreign-object (p-property-count :int)                      
      (enumerate-instance-extension-properties p-layer-name p-property-count (null-pointer))
      (let ((property-count (mem-aref p-property-count :int)))
        (with-foreign-object (p-properties '(:struct extension-properties) property-count)                     
          (enumerate-instance-extension-properties p-layer-name p-property-count p-properties)                   
          (remove-duplicates
           (loop for i from 0 below (mem-aref p-property-count :int)                    
                 collect (let ((p-property (mem-aptr p-properties '(:struct extension-properties i))))
                           (list (foreign-string-to-lisp (foreign-slot-pointer p-property '(:struct extension-properties) 'extension-name))
                                 (foreign-slot-value p-property '(:struct extension-properties) 'spec-version))))           
           :test #'equalp))))))

(loop for layer in (get-instance-layer-props)
      collect (get-instance-ext-props (car layer)))

(defun inst-version ()
  (with-foreign-object (p-instance-version :int)
    (enumerate-instance-version p-instance-version)
    (mem-aref p-instance-version :int)))
